// generated 2003/1/7 19:34:04 CET by sky@dreadnought.(none)
// using glademm V1.1.3c_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/sky/c/webcam/src/control/gtkwebcamcontrol.glade
// for gtk 2.1.3 and gtkmm 2.1.0
//
// Please modify the corresponding derived classes in ././ControlWindow.hh and././ControlWindow.cc

#ifndef _CONTROLWINDOW_GLADE_HH
#  define _CONTROLWINDOW_GLADE_HH


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA
#include <gtkmm/accelgroup.h>

class GlademmData
{

        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:

        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {
        }

        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        }
};
#endif //GLADEMM_DATA

#include <gtkmm/window.h>
#include <gtkmm/optionmenu.h>
#include <gtkmm/scale.h>
#include <gtkmm/checkbutton.h>
#include <gtkmm/box.h>
#include <gtkmm/button.h>
#include <gtkmm/main.h>
#include <gtkmm/drawingarea.h>
#include <gtkmm/eventbox.h>
#include <gtkmm/menu.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu_elems.h>
#include <gtkmm/separatormenuitem.h>
#include <gtkmm/image.h>
#include <gtkmm/stock.h>

class ControlWindow_glade : public Gtk::Window
{

        GlademmData *_data;
protected:
        class Gtk::OptionMenu *menu_resolution_preview;
        class Gtk::OptionMenu *menu_resolution_snapshot;
public:
        class Gtk::HScale *brightness;
        class Gtk::HScale *color;
        class Gtk::HScale *contrast;
        class Gtk::HScale *hue;
        class Gtk::CheckButton *backlightcompensation;
        class Gtk::HScale *gamma;
        class Gtk::CheckButton *flickercompensation;
protected:

        ControlWindow_glade();

        ~ControlWindow_glade();
private:
        virtual void on_menu_resolution_preview_changed() = 0;
        virtual void on_50p_activate() = 0;
        virtual void on_100p_activate() = 0;
        virtual void on_200p_activate() = 0;
        virtual void on_menu_resolution_snapshot_changed() = 0;
        virtual void on_brightness_changed() = 0;
        virtual void on_color_changed() = 0;
        virtual void on_contrast_changed() = 0;
        virtual void on_hue_changed() = 0;
        virtual void on_backlightcomp_toggled() = 0;
        virtual void on_dynnoise_none_activate() = 0;
        virtual void on_dynnoise_low_activate() = 0;
        virtual void on_dynnoise_medium_activate() = 0;
        virtual void on_dynnoise_high_activate() = 0;
        virtual void on_gamma_changed() = 0;
        virtual void on_compression_level_none_activate() = 0;
        virtual void on_compression_level_low_activate() = 0;
        virtual void on_compression_level_medium_activate() = 0;
        virtual void on_compression_level_high_activate() = 0;
        virtual void on_flickercomp_toggled() = 0;
        virtual void cb_save_user_settings() = 0;
        virtual void cb_restore_user_settings() = 0;
        virtual void cb_restore_factory_defaults() = 0;
        virtual void gtk_main_quit() = 0;
};
#endif
